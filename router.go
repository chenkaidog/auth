// Code generated by hertz generator.

package main

import (
	handler "auth/biz/handler"
	"auth/biz/middleware/jwt"

	"github.com/cloudwego/hertz/pkg/app/server"
)

// customizeRegister registers customize routers.
func customizedRegister(r *server.Hertz) {
	r.GET("/ping", handler.Ping)

	apiV1 := r.Group("/api/v1/")
	{
		account := apiV1.Group("/account")
		{
			account.POST("/login", handler.Login)
			loginAccount := account.Group("/", jwt.ValidateMW())
			{
				loginAccount.POST("/logout", handler.Logout)
			}
		}

		user := apiV1.Group("/user", jwt.ValidateMW())
		{
			user.GET("/info", handler.GetUserInfo)
		}

		domain := apiV1.Group("/domain")
		{
			domain.POST("/create", handler.CreateDomain)
			domain.GET("/list", handler.QueryDomainList)

			domain.POST("/update", handler.UpdateDomain)
			domain.POST("/delete", handler.DeleteDomain)
			domain.GET("/query", handler.QueryDomainDetail)

			domain.POST("/create_role", handler.CreateRole)
			domain.GET("/query_role", handler.QueryRoleList)

			domain.POST("/create_resource", handler.CreateResource)
			domain.GET("/query_resource", handler.QueryResourceList)
		}

		role := apiV1.Group("/role")
		{
			role.POST("/update", handler.UpdateRole)
			role.POST("/delete", handler.DeleteRole)
			role.GET("/query", handler.QueryRoleDetail)
		}

		resource := apiV1.Group("/resource")
		{
			resource.POST("/update", handler.UpdateResource)
			resource.POST("/delete", handler.DeleteResource)
			resource.GET("/query", handler.QueryResourceDetail)
		}
	}
}
